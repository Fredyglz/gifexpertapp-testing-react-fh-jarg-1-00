{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAerC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC6BDO,EA9BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAjBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IASGqB,EDlBwBK,CAAa1B,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QASpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAACC,GAER,OAAO,cAAC,EAAD,eAESA,GADCA,EAAIC,aEYlCgB,EAlCM,WAAO,IAAD,EACazC,mBAAS,CAAC,cADvB,mBAChB0C,EADgB,KACJ3C,EADI,KAQvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAOQ2C,EAAWnB,KAAI,SAACT,GACZ,OAAO,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCtBzC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.52111744.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h1>{inputValue}</h1> */}\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=IRusmGu3EXqVrzNZ5vjQGbabyl6Ae9Z3`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n    // Custom Hook\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n            <div className='card-grid'>\r\n                    {\r\n                        images.map((img) => {\r\n                            // return <li key={id}> {title} <img src={url} /> </li>\r\n                            return <GifGridItem \r\n                                        key={img.id}\r\n                                        {...img}\r\n                                    />\r\n                        })\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state; // {data:[], loading:true};\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories(cats => ['Attack of Titans', ...categories]);\r\n    //     setCategories(['Attack of Titans', ...categories]);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {/* {\r\n                    categories.map((category) => {\r\n                        return <li key={category}>{category}</li>\r\n                    })\r\n                } */}\r\n                {\r\n                    categories.map((category) => {\r\n                        return <GifGrid\r\n                                    key={category} \r\n                                    category={category} \r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>"],"sourceRoot":""}